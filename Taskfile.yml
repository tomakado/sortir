version: 3

vars:
  PROJECT_BIN_DIR: "$(pwd)/bin"

  GOLANGCI_LINT_VERSION: "v2.1.6"
  GOLANGCI_LINT_BIN: "{{ .PROJECT_BIN_DIR }}/golangci-lint"
  GOLANGCI_LINT_CUSTOM_BIN: "{{ .PROJECT_BIN_DIR }}/gcl-custom"

tasks:
  # Tools
  install-tools:
    desc: "Install tools"
    cmd:  |
          GOBIN={{ .PROJECT_BIN_DIR }} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{ .GOLANGCI_LINT_VERSION }} && \
             {{ .GOLANGCI_LINT_BIN }} --version

  reinstall-tools:
    desc: "Reinstall tools (e.g. for updating to new versions)"
    cmd:  |
          rm -rf {{ .PROJECT_BIN_DIR }} && \
            mkdir -p {{ .PROJECT_BIN_DIR }} && \
            task install-tools

  lint:
    desc: "Run golangci-lint with sortir plugin"
    cmds:
      - "{{ .GOLANGCI_LINT_BIN }} custom"
      - mv custom-gcl {{ .GOLANGCI_LINT_CUSTOM_BIN }}
      - |
        go run golang.org/x/tools/gopls/internal/analysis/modernize/cmd/modernize@latest --fix ./...
        {{ .GOLANGCI_LINT_CUSTOM_BIN }} run --tests=0 --fix ./...
        

  # Test
  test:
    desc: "Run unit tests"
    cmds:
      - go test ./... --coverprofile=coverage.out
      - cat coverage.out | grep -vE "main.go|golangci-plugin.go|fixer.go|logger.go|config.go" > coverage_filtered.out
      - go tool cover -func=coverage_filtered.out

  # Build
  build:
    desc: "Build the project"
    cmds:
      - go build -o {{ .PROJECT_BIN_DIR }}/sortir ./cmd/sortir
